<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product media data template
 *
 * @see Mage_Catalog_Block_Product_View_Media
 */
?>
<?php
    $_product = $this->getProduct();
    $_helper = $this->helper('catalog/output');
    $zoomW = is_numeric(Mage::getStoreConfig('mtattribute/general/zoomW'))?Mage::getStoreConfig('mtattribute/general/zoomW'):'auto';
    $zoomH = is_numeric(Mage::getStoreConfig('mtattribute/general/zoomH'))?Mage::getStoreConfig('mtattribute/general/zoomH'):'auto';
    $margin = (int)Mage::getStoreConfig('mtattribute/czoom/margin');
?>
<?php if ($_product->getImage() != 'no_selection' && $_product->getImage()): ?>
    <p class="product-image">
        <a class="cloud-zoom" id="zoomID" rel="<?php echo Mage::helper('mtattribute')->getCloudZoomConfig(true)?>" href="<?php echo $this->helper('catalog/image')->init($_product, 'image')?>">
            <img src="<?php echo $this->helper('catalog/image')->init($this->getProduct(), 'image')->resize(265)?>">
        </a>
    </p>
<?php else: ?>
    <p class="product-image">
        <?php
            $_img = '<img src="'.$this->helper('catalog/image')->init($_product, 'image')->resize(265).'" alt="'.$this->htmlEscape($this->getImageLabel()).'" title="'.$this->htmlEscape($this->getImageLabel()).'" />';
            echo $_helper->productAttribute($_product, $_img, 'image');
        ?>
    </p>
<?php endif; ?>
<?php if (count($this->getGalleryImages()) > 0): ?>
    <div class="more-views" id="moreViews">
        <h2><?php echo $this->__('More Views') ?></h2>
        <ul class="slides">
        <?php foreach ($this->getGalleryImages() as $_image): ?>
            <li>
                <a href="<?php echo $_image->getUrl()?>" title="<?php echo $this->htmlEscape($_image->getLabel())?>" class="cloud-zoom-gallery" rel="useZoom:'zoomID',smallImage:'<?php echo $this->helper('catalog/image')->init($this->getProduct(), 'image', $_image->getFile())->resize(265)?>'">
                    <img src="<?php echo $this->helper('catalog/image')->init($this->getProduct(), 'thumbnail', $_image->getFile())->resize(56)?>" width="56" height="56" alt="<?php echo $this->htmlEscape($_image->getLabel())?>" />
                </a>
            </li>
        <?php endforeach; ?>
        </ul>
    </div>
    <script type="text/javascript">
        jQuery(document).ready(function(){
            bindMoreViewsFlexSlider();
        });
        function bindMoreViewsFlexSlider(){
            var count = <?php echo Mage::getStoreConfig('mtattribute/czoom/count') ? (int)Mage::getStoreConfig('mtattribute/czoom/count') : 1?>;
            jQuery('#moreViews').flexslider({
                namespace: 'more-views-',
                slideshow: false,
                animation: "slide",
                itemWidth: getMoreViewsItemWidth('moreViews', count, <?php echo $margin ?>),
                itemMargin: <?php echo $margin ?>,
                minItems: 1,
                maxItems: count,
                selector: ".slides > li",
                controlNav: false
            });
        }
        function getMoreViewsItemWidth(id, column, margin){
            var width = jQuery('#'+id).width();
            return (width/column).toFixed(2) - margin*2;
        }
    </script>
<?php endif; ?>